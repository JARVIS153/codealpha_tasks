# Importing necessary modules in the sniffer
from scapy.all import sniff, IP, TCP, UDP, wrpcap

# Function to process each captured packet from the sniffer
def process_packet(packet):
    if packet.haslayer(IP):
        ip_layer = packet[IP]
        src_ip = ip_layer.src
        dst_ip = ip_layer.dst

        print(f"\n[+] Packet Captured:")
        print(f"    Source IP: {src_ip}")
        print(f"    Destination IP: {dst_ip}")

        if packet.haslayer(TCP):
            tcp_layer = packet[TCP]
            print(f"    Protocol: TCP")
            print(f"    Source Port: {tcp_layer.sport}")
            print(f"    Destination Port: {tcp_layer.dport}")

        elif packet.haslayer(UDP):
            udp_layer = packet[UDP]
            print(f"    Protocol: UDP")
            print(f"    Source Port: {udp_layer.sport}")
            print(f"    Destination Port: {udp_layer.dport}")

# Capture packets and process them
sniff(prn=process_packet, count=10)
